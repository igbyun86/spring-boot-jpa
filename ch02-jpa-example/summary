@Entity
이 클래스를 테이블과 매핑한다고 JPA에게 알려준다.
해당 클래스를 엔티티 클래스라 한다.

@TABLE
엔티티 클래스에 매핑할 테이블 정보를 알려준다.
name속성을 생략하면 클래스 이름을 테이블 이름으로 매핑한다.

@Id
엔티티 클래스의 필드를 테이블의 기본키에 매핑한다.
해당 필드를 식별자 필드라 한다.

@Column
필드를 컬럼에 매핑한다.

매핑정보가 없는 필드(매핑 어노테이션이 없는 필드)
필드명을 사용해서 컬럼명으로 매핑한다.

EntityManagerFactory
Persistence 클래스를 사용해 EntityManagerFactory생성
애플리케이션 전체에서 딱 한번만 생성하고 공유해서 사용해야 한다.

EntityManager
Entity를 데이터베이스에 등록/수정/삭제/조회할 수 있다.
데이터베이스 커넥션과 밀접한 관계가 있으므로 스레드간에 공유하거나 재사용하면 안된다.

JPQL vs SQL의 차이
JPQL은 엔티티 객체를 대상으로 쿼리한다.(클래스와 필드를 대상으로 쿼리한다.)
JPQL은 데이터베이스 테이블을 전혀 알지 못한다.
SQL은 데이터베이스 테이블을 대상으로 쿼리한다.



