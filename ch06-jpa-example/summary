-다대일 단방향
회원은 팀엔티티를 참조할 수 있지만 팀에는 회원을 참조하는 필드가 없다

-다대일 양방향
양방향은 외래키가 있는 쪽이 연관관계의 주인이다
양방향 연관관계는 항상 서로를 참조해야 한다.

-일대다 단방향
팀 엔티티에서 외래키를 관리한다. @JoinColum을 명시해야 한다.
-단점
매핑한 객체가 관리하는 외래키가 다른 테이블에 있다
다른 테이블에 외래키가 있으면 연관관계 처리를 위한 update sql을 추가로 실행해야 한다.

※일대다 단방향 매핑 대신에 다대일 양방향 매핑을 사용하자!!

-일대다 양방향
일대다 양방향 매핑은 존재하지 않는다.
-> 다대일 양방향 매핑을 사용해야 한다.

-일대일
일대일 관계는 그 반대도 일대일 관계다.
테이블 관계에서 일대다, 다대일은 항상 다(N)쪽이 외래키를 가진다. 반면에 일대일관계는
주 테이블이나 대상 테이블 둘 중 어느곳이나 외래키를 가질 수 있다.

- 주테이블에 외래키
주 객체가 대상 객체를 참조하는 것처럼 주 테이블에 외래키를 두고 대상 테이블을 참조한다.

- 대상 테이블에 외래키
전통적인 데이터베이스 개발자들은 보통 대상 테이블에 외래키를 두는 것을 선호한다.
장점은 테이블 관계를 일대일에서 일대다로 변경할 때 테이블 구조를 그대로 유지할 수 있다.
※일대일 관계 중 대상 테이블에 외래키가 있는 단방향 관계는 JPA에서 지원하지 않는다.


-다대다
관계형 데이터베이스는 정규화된 테이블 2개로 다대다 관계를 표현할 수 없다.
-다대다:단방향

-복합기본키
복합키는 별도의 식별자 클래스로 만들어야한다.
Serializable을 구현해야 한다.
equals와 hashCode 메소드를 구현해야 한다.
기본 생성자가 있어야 한다.
식별자 클래스는 public이어야 한다.
@IdClass를 사용하는 방법 외에 @EmbeddedId를 사용하는 방법도 있다.




