객체지향 쿼리
:엔티티 객체를 조회하는 객체지향 쿼리
sql을 추상화해서 특정 데이터베이스에 의존하지 않는다.

JPQL
:엔티티 객체를 조회하는 객체지향 쿼리
String jpql = "select m from Member as m where m.username='kim'"
em.createQuery(jpql, Member.class).getResultList();
엔티티 객체를 대상으로 쿼리한다.
sql을 추상화해서 특정 데이터베이스 sql에 의존하지 않는다.
결국 sql로 변환된다.

-특징
 -대소문자 구분
 -엔티티 이름(엔티티명을 지정하지 않으면 클래스명을 사용한다.)
 -별칭은 필수(AS는 생략 가능하다)

Criteria
:JPQL을 생성하는 빌더 클래스
query.select(m).where(...)

-장점
 - 컴파일 시점에 오류를 발견할 수 있다.
 - IDE를 사용하면 코드 자동완성을 지원한다.
 - 동적 쿼리를 작성하기 편하다.

-단점
 - 작성한 코드가 한눈에 들어오지 않는다.

QueryDSL
:Criteria처럼 JPQL 빌더 역할을 한다.

------------------------------------------------------------------------------------------------------------------------
-페치 조인과 일반 조인의 차이점
- 일반조인은 select 절에 지정한 엔티티만 조회한다.
- 페치 조인은 연관된 엔티티나 컬렉션을 한번에 조회한다.

-페치 조인의 특징관 한계
페치 조인을 사용하면 sql 한번으로 연관된 엔티티들을 함께 조회할 수 있어서 sql 호출 횟수를 줄여 성능을 최적화할 수 있다.
페치 조인은 글로벌 로딩 전략보다 우선한다.
글로벌 로딩 전략은 지연 로딩을 사용하고 최적화가 필요함녀 페치 조인을 적용하는 것이 효과적이다.

-한계
 -페치 조인 대상에는 별칭을 줄 수 없다.
 -둘 이상의 컬렉션을 페치할 수 없다.
 -컬렉션을 페치 조인하면 페이징을 사용할 수 없다.
  (일대일, 다대일들은 페치 조인을 사용해도 페이징 api를 사용할 수 있다.)

------------------------------------------------------------------------------------------------------------------------
-경로 표현식

-상태 필드: 단순히 값을 저장하기 위한 필드(필드 or 프로퍼티)
-연관 필드: 연관관계를 위한 필드, 임베디드 타입 포함(필드 or 프로퍼티)
 -단일 값 연관 필드: @ManyToOne, @OneToOne 대상이 엔티티
 -컬렉션 값 연관 필드: @OneToMany, @ManyToMany 대상이 컬렉션션

-경로 표현식과 특징
 -상태 필드 경로: 경로 탐색의 끝이다. 더는 탐색할 수 없다.
 -단일 값 연관 경로: 묵시적으로 내부 조인이 일어난다. 단일 값 연관 경로는 계속 탐색할 수 있다.
 -컬렉션 값 연관 경로: 묵시적으로 내부 조인이 일어난다. 더는 탐색할 수 없다. 단 FROM절에서 조인을 통해 별칭을 얻으면
  별칭으로 탐색할 수 있다.

 -묵시적 조인 시 주의사항
  -항상 내부 조인이다.
  -컬렉션은 경로 탐색의 끝이다. 컬렉션에서 경로 탐색을 하려면 명시적으로 조인해서 별칭을 얻어야 한다.
  -경로 탐색은 주로 SELECT, WHERE절에서 사용하지만 묵시적 조인으로 인해 sql의 from 절에 영향을 준다.

 ※분석하기 쉽도록 묵시적 조인보다는 명시적 조인을 사용하자!

------------------------------------------------------------------------------------------------------------------------
- 서브 쿼리
: 서브쿼리를 whare, having 절에서만 사용할 수 있고 select, from절에서는 사용할 수 없다.

------------------------------------------------------------------------------------------------------------------------
Named쿼리
xml과 어노테이션에 같은 설정이 있으면 xml이 우선권을 가진다.
