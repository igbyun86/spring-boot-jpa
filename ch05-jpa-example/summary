-객체 연관관계와 테이블 연관관계의 가장 큰 차이
테이블은 언제나 양방향 관계
객체의 양방향 관계는 실질적으로 서로다른 단방향관계 2개이다

@ManyToOne
다대일관계라는 매핑정보

@JoinColumn
외래키를 매핑할때 사용

-연관관계주인
: 두 객체 연관관계 중 하나를 정해서 테이블의 외래키를 관리해야 하는데 이것을 연관관계의 주인이라고 한다.
연관관계의 주인만이 데이터베이스 연관관계와 매핑되고 외래키를 관리(등록,수정,삭제)할 수 있다.
반면에 주인이 아닌 쪽은 읽기만 가능하다.
주인은 mappedBy 속성을 사용하지 않는다.
주인이 아니면 mappedBy 속성을 사용해서 속성의 값으로 연관관계의 주인을 지정해야 한다.

연관관계의 주인만 데이터베이스 연관관계와 매핑되고 외래키를 관리할 수 있다.
주인이 아닌 반대편은 읽기만 가능하고 외래키를 변경하지 못한다.

-----------
@ManyToOne은 항상 연관관계의 주인이 되므로 mappedBy를 설정할 수 없다. 따라서 @ManyToOne에는 mappedBy 속성이 없다.

-----------
※양방향 연관관계의 주의점
연관관계의 주인에는 값을 입력하지 않고, 주인이 아닌 곳에만 값을 입력하는 경우가 많다.

※양방향 연관관계 결론
=> 객체의 양방향 연관관계는 양쪽 모두 관계를 맺어주자!

정리
- 단방향 매핑만으로 테이블과 객체의 연관관계 매핑은 이미 완료되었다.
- 단방향을 양방향으로 만들면 반대방향으로 객체 그래프 탐색 기능이 추가된다.
- 양방향 연관관계를 매핑하려면 객체에서 양쪽 방향을 모두 관리해야 한다.